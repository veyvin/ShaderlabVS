#
# A defination for the built-in values in Unity3D
#
# Use the format:
#	{%
#		%$ Name = {} $%
#		%$ Type = {} $%
#		%$ Value = {} $%
#	%}
#

#-------------------------------------------------------------------------------------------------
#----------------------------------------Transformations ----------------------------------------
#-------------------------------------------------------------------------------------------------

{%
	%$ Name = {UNITY_MATRIX_MVP} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current model * view * projection matrix.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_MV} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current model * view matrix.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_V} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current view matrix.} $%
%}


{%
	%$ Name = {UNITY_MATRIX_P} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current projection matrix.} $%
%}


{%
	%$ Name = {UNITY_MATRIX_VP} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current view * projection matrix.} $%
%}


{%
	%$ Name = {UNITY_MATRIX_T_MV} $%
	%$ Type = {float4x4} $%
	%$ Value = {Transpose of model * view matrix.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_IT_MV} $%
	%$ Type = {float4x4} $%
	%$ Value = {Inverse transpose of model * view matrix.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_TEXTURE0} $%
	%$ Type = {float4x4} $%
	%$ Value = {Texture transformation matrices.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_TEXTURE1} $%
	%$ Type = {float4x4} $%
	%$ Value = {Texture transformation matrices.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_TEXTURE2} $%
	%$ Type = {float4x4} $%
	%$ Value = {Texture transformation matrices.} $%
%}

{%
	%$ Name = {UNITY_MATRIX_TEXTURE3} $%
	%$ Type = {float4x4} $%
	%$ Value = {Texture transformation matrices.} $%
%}

{%
	%$ Name = {_Object2World} $%
	%$ Type = {float4x4} $%
	%$ Value = {Current model matrix.} $%
%}


{%
	%$ Name = {_World2Object} $%
	%$ Type = {float4x4} $%
	%$ Value = {Inverse of current world matrix.} $%
%}

{%
	%$ Name = {_WorldSpaceCameraPos} $%
	%$ Type = {float3} $%
	%$ Value = {World space position of the camera.} $%
%}

{%
	%$ Name = {unity_Scale} $%
	%$ Type = {float4} $%
	%$ Value = {xyz components unused; w contains scale for uniformly scaled objects.} $%
%}

#-------------------------------------------------------------------------------------------------
#-------------------------------------------Lighting --------------------------------------------
#-------------------------------------------------------------------------------------------------

{%
	%$ Name = {_ModelLightColor} $%
	%$ Type = {float4} $%
	%$ Value = {Material’s Main * Light color} $%
%}


{%
	%$ Name = {_SpecularLightColor} $%
	%$ Type = {float4} $%
	%$ Value = {Material’s Specular * Light color} $%
%}


{%
	%$ Name = {_ObjectSpaceLightPos} $%
	%$ Type = {float4} $%
	%$ Value = {Light’s position in object space. w component is 0 for directional lights, 1 for other lights} $%
%}


{%
	%$ Name = {_Light2World} $%
	%$ Type = {float4x4} $%
	%$ Value = {Light to World space matrix} $%
%}


{%
	%$ Name = {_World2Light} $%
	%$ Type = {float4x4} $%
	%$ Value = {World to Light space matrix} $%
%}


{%
	%$ Name = {_Object2Light} $%
	%$ Type = {float4x4} $%
	%$ Value = {Object to Light space matrix} $%
%}

{%
	%$ Name = {_WorldSpaceLightPos0} $%
	%$ Type = {float4} $%
	%$ Value = {Light postion in world space} $%	
%}

{%
	%$ Name = {_LightColor0} $%
	%$ Type = {float4} $%
	%$ Value = {Light color} $%	
%}

{%
	%$ Name = {UNITY_LIGHTMODEL_AMBIENT} $%
	%$ Type = {float4} $%
	%$ Value = {Ambient color provided by Unity} $%	
%}

{%
	%$ Name = {_LightMatrix0} $%
	%$ Type = {float4x4} $%
	%$ Value = {World space to light space transform matrix. Defined in AutoLight.cginc} $%	
%}

{%
	%$ Name = {_LightTexture0} $%
	%$ Type = {} $%
	%$ Value = {Cookie texture attched to light. Defined in AutoLight.cginc} $%	
%}
{%
	%$ Name = {unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0} $%
	%$ Type = {} $%
	%$ Value = {(ForwardBase pass only) world space positions of first four non-important point lights.} $%	
%}

{%
	%$ Name = {unity_4LightAtten0} $%
	%$ Type = {} $%
	%$ Value = {(ForwardBase pass only) attenuation factors of first four non-important point lights.} $%	
%}
{%
	%$ Name = {unity_LightColor} $%
	%$ Type = {} $%
	%$ Value = {(ForwardBase pass only) colors of of first four non-important point lights.} $%	
%}
{%
	%$ Name = {unity_LightPosition} $%
	%$ Type = {} $%
	%$ Value = {View-space light positions. (-direction,0) for directional lights; (position,1) for point/spot lights.} $%	
%}
{%
	%$ Name = {unity_LightAtten} $%
	%$ Type = {} $%
	%$ Value = {Light attenuation factors. x is cos(spotAngle/2) or –1 for non-spot lights; y is 1/cos(spotAngle/4) or 1 for non-spot lights; z is quadratic attenuation; w is squared light range.} $%	
%}
{%
	%$ Name = {unity_SpotDirection} $%
	%$ Type = {} $%
	%$ Value = {View-space spot light positions; (0,0,1,0) for non-spot lights.} $%	
%}



{%
	%$ Name = {unity_AmbientSky} $%
	%$ Type = {} $%
	%$ Value = {Sky ambient lighting color in gradient ambient lighting case.} $%	
%}
{%
	%$ Name = {unity_AmbientEquator} $%
	%$ Type = {} $%
	%$ Value = {Equator ambient lighting color in gradient ambient lighting case} $%	
%}
{%
	%$ Name = {unity_AmbientGround} $%
	%$ Type = {} $%
	%$ Value = {Ground ambient lighting color in gradient ambient lighting case.} $%	
%}
{%
	%$ Name = {UNITY_LIGHTMODEL_AMBIENT} $%
	%$ Type = {} $%
	%$ Value = {Ambient lighting color (sky color in gradient ambient case). Legacy variable.} $%	
%}
{%
	%$ Name = {unity_FogColor} $%
	%$ Type = {} $%
	%$ Value = {Fog color.} $%	
%}
{%
	%$ Name = {unity_FogParams} $%
	%$ Type = {} $%
	%$ Value = {Parameters for fog calculation: (density / sqrt(ln(2)), density / ln(2), –1/(end-start), end/(end-start)). x is useful for Exp2 fog mode, y for Exp mode, z and w for Linear mode.} $%	
%}



{%
	%$ Name = {unity_LODFade} $%
	%$ Type = {} $%
	%$ Value = {Level-of-detail fade when using LODGroup. x is fade (0..1), y is fade quantized to 16 levels, z and w unused.} $%	
%}









#-------------------------------------------------------------------------------------------------
#-------------------------------------------Various --------------------------------------------
#------------------------------------------------------------------------------------------------

{%
	%$ Name = {_Time} $%
	%$ Type = {float4} $%
	%$ Value = {Time (t/20, t, t*2, t*3), use to animate things inside the shaders.} $%
%}

{%
	%$ Name = {_SinTime} $%
	%$ Type = {float4} $%
	%$ Value = {Sine of time: (t/8, t/4, t/2, t).} $%
%}

{%
	%$ Name = {_CosTime} $%
	%$ Type = {float4} $%
	%$ Value = {Cosine of time: (t/8, t/4, t/2, t).} $%
%}

{%
	%$ Name = {unity_DeltaTime} $%
	%$ Type = {float4} $%
	%$ Value = {Delta time: (dt, 1/dt, smoothDt, 1/smoothDt).} $%
%}

{%
	%$ Name = {_ProjectionParams} $%
	%$ Type = {float4} $%
	%$ Value = {x is 1.0 (or –1.0 if currently rendering with a flipped projection matrix), y is the camera’s near plane, z is the camera’s far plane and w is 1/FarPlane.} $%
%}

{%
	%$ Name = {_ScreenParams} $%
	%$ Type = {float4} $%
	%$ Value = {x is the current render target width in pixels, y is the current render target height in pixels, z is 1.0 + 1.0/width and w is 1.0 + 1.0/height.} $%
%}
{%
	%$ Name = {_ZBufferParams} $%
	%$ Type = {float4} $%
	%$ Value = {Used to linearize Z buffer values. x is (1-far/near), y is (far/near), z is (x/far) and w is (y/far).} $%
%}

{%
	%$ Name = {unity_OrthoParams} $%
	%$ Type = {float4} $%
	%$ Value = {x is orthographic camera’s width, y is orthographic camera’s height, z is unused and w is 1.0 when camera is orthographic, 0.0 when perspective} $%
%}

{%
	%$ Name = {unity_CameraProjection} $%
	%$ Type = {float4} $%
	%$ Value = {Camera’s projection matrix.} $%
%}

{%
	%$ Name = {unity_CameraInvProjection} $%
	%$ Type = {float4} $%
	%$ Value = {Inverse of camera’s projection matrix.} $%
%}

{%
	%$ Name = {unity_CameraWorldClipPlanes[6]} $%
	%$ Type = {float4} $%
	%$ Value = {Camera frustum plane world space equations, in this order: left, right, bottom, top, near, far.} $%
%}



